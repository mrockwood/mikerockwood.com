// Name:            Tab
// Description:     Component to create a tabbed navigation
//
// Component:       `uk-tab`
//
// Modifiers:       `uk-tab-bottom`
//                  `uk-tab-left`
//                  `uk-tab-right`
//
// States:          `uk-active`
//                  `uk-disabled`
//
// ========================================================================


// Variables
// ========================================================================

:where(.uk-tab) {

    --tab-margin-horizontal:                   20px;

    --tab-item-padding-horizontal:             10px;
    --tab-item-padding-vertical:               5px;
    --tab-item-color:                          hsl( var(--theme-muted-color, var(--global-muted-color) ) );
    --tab-item-hover-color:                    hsl( var(--theme-color, var(--global-color) ) );
    --tab-item-hover-text-decoration:          none;
    --tab-item-active-color:                   hsl( var(--theme-emphasis-color, var(--global-emphasis-color) ) );
    --tab-item-disabled-color:                 hsl( var(--theme-muted-color, var(--global-muted-color) ) );

}


/* ========================================================================
   Component: Tab
 ========================================================================== */

/*
 * 1. Allow items to wrap into the next line
 * 2. Gutter
 * 3. Reset list
 */

.uk-tab {
    display: flex;
    /* 1 */
    flex-wrap: wrap;
    /* 2 */
    margin-inline-start: calc( var(--tab-margin-horizontal) * -1 );
    /* 3 */
    padding: 0;
    list-style: none;
}

/*
 * 1. Space is allocated solely based on content dimensions: 0 0 auto
 * 2. Gutter
 * 3. Create position context for dropdowns
 */

.uk-tab > * {
    /* 1 */
    flex: none;
    /* 2 */
    padding-inline-start: var(--tab-margin-horizontal);
    /* 3 */
    position: relative;
}


/* Items
 ========================================================================== */

/*
 * Items must target `a` elements to exclude other elements (e.g. dropdowns)
 * 1. Center content vertically, e.g. an icon
 * 2. Imitate white space gap when using flexbox
 * 3. Center content if a width is set
 * 4. Style
 */

.uk-tab > * > a {
    /* 1 */
    display: flex;
    align-items: center;
    /* 2 */
    column-gap: 0.25em;
    /* 3 */
    justify-content: center;
    /* 4 */
    padding: var(--tab-item-padding-vertical) var(--tab-item-padding-horizontal);
    color: var(--tab-item-color);
}

/* Hover */
.uk-tab > * > a:hover {
    color: var(--tab-item-hover-color);
    text-decoration: var(--tab-item-hover-text-decoration);
}

/* Active */
.uk-tab > .uk-active > a {
    color: var(--tab-item-active-color);
}

/* Disabled */
.uk-tab > .uk-disabled > a {
    color: var(--tab-item-disabled-color);
}


/* Position modifier
 ========================================================================== */

/*
 * Bottom
 */

.uk-tab-bottom {}

.uk-tab-bottom > * > a {}

/*
 * Left + Right
 * 1. Reset Gutter
 */

.uk-tab-left,
.uk-tab-right {
    flex-direction: column;
    /* 1 */
    margin-inline-start: 0;
}

/* 1 */
.uk-tab-left > *,
.uk-tab-right > * { padding-inline-start: 0; }

.uk-tab-left {}

.uk-tab-right {}

.uk-tab-left > * > a {
    justify-content: left;
}

.uk-tab-right > * > a {
    justify-content: left;
}
