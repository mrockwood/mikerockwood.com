// Name:            Off-canvas
// Description:     Component to create an off-canvas sidebar
//
// Component:       `uk-offcanvas`
//
// Sub-objects:     `uk-offcanvas-bar`
//                  `uk-offcanvas-container`
//                  `uk-offcanvas-page`
//
// Adopted:         `uk-offcanvas-close`
//
// Modifiers:       `uk-offcanvas-flip`
//                  `uk-offcanvas-bar-animation`
//                  `uk-offcanvas-reveal`
//                  `uk-offcanvas-overlay`
//                  `uk-offcanvas-container-animation`
//
// States:          `uk-open`
//
// ========================================================================


// Variables
// ========================================================================

:where([class*='uk-offcanvas']) {

    --offcanvas-z-index:                              var(--global-z-index);

    --offcanvas-bar-width:                            270px;
    --offcanvas-bar-padding-vertical:                 var(--global-margin);
    --offcanvas-bar-padding-horizontal:               var(--global-margin);
    --offcanvas-bar-background:                       hsl(var(--global-secondary-background));

    --offcanvas-close-position:                       5px;
    --offcanvas-close-padding:                        5px;

    --offcanvas-overlay-background:                   rgba(0,0,0,0.1);

}

@media (min-width: $breakpoint-medium) {

    :where([class*='uk-offcanvas']) {

        --offcanvas-bar-width:                        350px;
        --offcanvas-bar-padding-vertical:             var(--global-medium-gutter);
        --offcanvas-bar-padding-horizontal:           var(--global-medium-gutter);

        --offcanvas-close-position:                   20px;

    }

}


/* ========================================================================
   Component: Off-canvas
 ========================================================================== */

/*
 * 1. Hide by default
 * 2. Set position
 */

.uk-offcanvas {
    /* 1 */
    display: none;
    /* 2 */
    position: fixed;
    inset-block-start: 0;
    inset-block-end: 0;
    inset-inline-start: 0;
    z-index: var(--offcanvas-z-index);
}

/*
 * Flip modifier
 */

.uk-offcanvas-flip .uk-offcanvas {
    inset-inline-end: 0;
    inset-inline-start: auto;
}


/* Bar
 ========================================================================== */

/*
 * 1. Set position
 * 2. Size and style
 * 3. Allow scrolling
 */

.uk-offcanvas-bar {
    /* 1 */
    position: absolute;
    inset-block-start: 0;
    inset-block-end: 0;
    inset-inline-start: calc(-1 * var(--offcanvas-bar-width));
    /* 2 */
    box-sizing: border-box;
    inline-size: var(--offcanvas-bar-width);
    padding: var(--offcanvas-bar-padding-vertical) var(--offcanvas-bar-padding-horizontal);
    background: var(--offcanvas-bar-background);
    /* 3 */
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
}

/* Flip modifier */
.uk-offcanvas-flip .uk-offcanvas-bar {
    inset-inline-start: auto;
    inset-inline-end: calc(-1 * var(--offcanvas-bar-width));
}

/*
 * Open
 */

.uk-open > .uk-offcanvas-bar { inset-inline-start: 0; }
.uk-offcanvas-flip .uk-open > .uk-offcanvas-bar {
    inset-inline-start: auto;
    inset-inline-end: 0;
}

/*
 * Slide Animation (Used in slide and push mode)
 */

.uk-offcanvas-bar-animation { transition: left 0.3s ease-out; }
.uk-offcanvas-flip .uk-offcanvas-bar-animation { transition-property: right; }

/*
 * Reveal Animation
 * 1. Set position
 * 2. Clip the bar
 * 3. Animation
 * 4. Reset position
 */

.uk-offcanvas-reveal {
    /* 1 */
    position: absolute;
    inset-block-start: 0;
    inset-block-end: 0;
    inset-inline-start: 0;
    /* 2 */
    inline-size: 0;
    overflow: hidden;
    /* 3 */
    transition: width 0.3s ease-out;
}

.uk-offcanvas-reveal .uk-offcanvas-bar {
    /* 4 */
    inset-inline-start: 0;
}

.uk-offcanvas-flip .uk-offcanvas-reveal .uk-offcanvas-bar {
    /* 4 */
    inset-inline-start: auto;
    inset-inline-end: 0;
}

.uk-open > .uk-offcanvas-reveal { inline-size: var(--offcanvas-bar-width); }

/*
 * Flip modifier
 */

.uk-offcanvas-flip .uk-offcanvas-reveal {
    inset-inline-end: 0;
    inset-inline-start: auto;
}


/* Close
 * Adopts `uk-close`
 ========================================================================== */

.uk-offcanvas-close {
    position: absolute;
    z-index: var(--offcanvas-z-index);
    inset-block-start: var(--offcanvas-close-position);
    inset-inline-end: var(--offcanvas-close-position);
    padding: var(--offcanvas-close-padding);
}

/*
 * Remove margin from adjacent element
 */

.uk-offcanvas-close:first-child + * { margin-block-start: 0; }


/* Overlay
 ========================================================================== */

/*
 * Overlay the whole page. Needed for the `::before`
 * 1. Using `100vw` so no modification is needed when off-canvas is flipped
 * 2. Allow for closing with swipe gesture on devices with pointer events.
 */

.uk-offcanvas-overlay {
    /* 1 */
    inline-size: 100vw;
    /* 2 */
    touch-action: none;
}

/*
 * 1. Mask the whole page
 * 2. Fade-in transition
 */

.uk-offcanvas-overlay::before {
    /* 1 */
    content: "";
    position: absolute;
    inset-block-start: 0;
    inset-block-end: 0;
    inset-inline-start: 0;
    inset-inline-end: 0;
    background: var(--offcanvas-overlay-background);
    /* 2 */
    opacity: 0;
    transition: opacity 0.15s linear;
}

.uk-offcanvas-overlay.uk-open::before { opacity: 1; }


/* Prevent scrolling
 ========================================================================== */

/*
 * Prevent horizontal scrollbar when the content is slide-out
 * Has to be on the `html` element too to make it work on the `body`
 */

.uk-offcanvas-page,
.uk-offcanvas-container { overflow-x: hidden; }


/* Container
 ========================================================================== */

/*
 * Prepare slide-out animation (Used in reveal and push mode)
 * Using `position: left` instead of `transform` because position `fixed` elements like sticky navbars
 * lose their fixed state and behaves like `absolute` within a transformed container
 * 1. Provide a fixed width and prevent shrinking
 */

.uk-offcanvas-container {
    position: relative;
    inset-inline-start: 0;
    transition: left 0.3s ease-out;
    /* 1 */
    box-sizing: border-box;
    inline-size: 100%;
}

/*
 * Activate slide-out animation
 */

:not(.uk-offcanvas-flip).uk-offcanvas-container-animation { inset-inline-start: var(--offcanvas-bar-width); }

.uk-offcanvas-flip.uk-offcanvas-container-animation { inset-inline-start: calc(-1 * var(--offcanvas-bar-width)); }
