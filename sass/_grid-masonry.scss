// Name:            Grid
// Description:     Component to create two dimensional grids
//
// Component:       `uk-grid2`
//
// ========================================================================


// Variables
// ========================================================================

:where(.uk-grid-masonry) {

    --grid-column-xsmall:                             100px;
    --grid-column-small:                              200px;
    --grid-column-medium:                             300px;
    --grid-column-large:                              400px;
    --grid-column-xlarge:                             500px;
    --grid-column-xxlarge:                            600px;

    --grid-gap-small:                                 var(--global-small-gutter);
    --grid-gap-medium:                                var(--global-gutter);
    --grid-gap-large:                                 var(--global-large-gutter);

}


/* ========================================================================
   Component: Grid
 ========================================================================== */

.uk-grid-masonry { display: grid; }
.uk-grid-inline { display: inline-grid; }


/* Columns Width
 ========================================================================== */

.uk-grid-column-xsmall { grid-template-columns: repeat(auto-fill, minmax(var(--grid-column-xsmall),1fr)); }
.uk-grid-column-small { grid-template-columns: repeat(auto-fill, minmax(var(--grid-column-small),1fr)); }
.uk-grid-column-medium { grid-template-columns: repeat(auto-fill, minmax(var(--grid-column-medium),1fr)); }
.uk-grid-column-large { grid-template-columns: repeat(auto-fill, minmax(var(--grid-column-large),1fr)); }
.uk-grid-column-xlarge { grid-template-columns: repeat(auto-fill, minmax(var(--grid-column-xlarge),1fr)); }
.uk-grid-column-xxlarge { grid-template-columns: repeat(auto-fill, minmax(var(--grid-column-xxlarge),1fr)); }


/* Gap
 ========================================================================== */

.uk-grid-gap-none { grid-gap: 0; }
.uk-grid-gap-small { grid-gap: var(--grid-gap-small); }
.uk-grid-gap-medium { grid-gap: var(--grid-gap-medium); }
.uk-grid-gap-large { grid-gap: var(--grid-gap-large); }


/* Auto Placement
 ========================================================================== */

// Default
.uk-grid-auto-flow-row { grid-auto-flow: row; }
.uk-grid-auto-flow-column { grid-auto-flow: column; }
.uk-grid-auto-flow-dense { grid-auto-flow: dense; }


/* Item Span
 ========================================================================== */

// TODO Fix implicit tracks if span is too large
.uk-grid-item-span-2 { grid-column-start: span 2; }
.uk-grid-item-span-3 { grid-column-start: span 3; }
.uk-grid-item-span-4 { grid-column-start: span 4; }
.uk-grid-item-span-5 { grid-column-start: span 5; }
